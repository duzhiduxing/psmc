<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//  
EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">  
<mapper namespace="priv.guochun.psmc.website.backstage.module.model.TabModule">  
 
    <resultMap type="priv.guochun.psmc.website.backstage.module.model.TabModule" id="tabmoudle">
    <result property="modelUuid" column="uuid"/>
    <result property="createAccUuid" column="create_acc_uuid"/>
    <result property="createDate" column="create_date"/>
    <result property="modifyAccUuid" column="modify_acc_uuid"/>
 	<result property="modifyDate" column="modify_date"/>
 	<result property="audit" column="audit"/>
 	<result property="auditAccUuid" column="audit_acc_uuid"/>
    <result property="auditDate" column="audit_date"/>
    <result property="releaseAccUuid" column="release_acc_uuid"/>
    <result property="releaseDate" column="release_date"/>
 	<result property="oneLevelClassify" column="one_level_classify"/>
 	<result property="towLevelClassify" column="two_level_classify"/>
 	<result property="releaseStatus" column="release_status"/>
</resultMap>  
   	<select id="getListTabModelByCondition" resultMap="tabmoudle" parameterType="hashmap">
   		SELECT 
	   		uuid, 
	   		create_acc_uuid, 
	   		create_date, 
	   		modify_acc_uuid, 
	   		modify_date, 
	   		audit, 
	   		audit_acc_uuid, 
	   		audit_date, 
	   		release_acc_uuid, 
	   		release_date, 
	   		one_level_classify, 
	   		two_level_classify,
	   		release_status
   		FROM tab_module
   			<where>
   				<if test="createAccName!=null and createAccName!=''">
   					and create_acc_uuid in(
   					  SELECT tab_person.uuid FROM tab_person WHERE tab_person.person_name LIKE  concat(concat('%',#{createAccName}),'%');
			          )
   				</if>
   				<if test="createDateBegin!=null and createDateBegin !=''">  
        		    and <![CDATA[create_date>=UNIX_TIMESTAMP(#{createDateBegin}) ]]>  
      			 </if>  
       			<if test="createDateEnd!=null and createDateEnd!=''" >  
      		      and <![CDATA[create_date<=UNIX_TIMESTAMP(#{createDateEnd}) ]]>  
       			</if>  
       			<if test="modifyAccName!=null and modifyAccName!='' ">
   					and modify_acc_uuid in(
   					  SELECT tab_person.uuid FROM tab_person WHERE tab_person.person_name LIKE  concat(concat('%',#{modifyAccName}),'%');
			          )
   				</if>
   				<if test="modifyDateBegin!=null and modifyDateBegin!=''">  
        		    and <![CDATA[modify_date>=UNIX_TIMESTAMP(#{modifyDateBegin}) ]]>  
      			 </if>  
       			<if test="modifyDateEnd!=null and modifyDateEnd!=''">  
      		      and <![CDATA[modify_date<=UNIX_TIMESTAMP(#{modifyDateEnd}) ]]>  
       			</if>  
       			<if test="audit!=null and audit!=''">  
      		      and  audit =#{audit}
       			</if>  
       			<if test="auditAccName!=null and auditAccName!=''">
   					and audit_acc_uuid in(
   					  SELECT tab_person.uuid FROM tab_person WHERE tab_person.person_name LIKE  concat(concat('%',#{auditAccName}),'%');
			          )
   				</if>
   				<if test="auditDateBegin!=null and auditDateBegin!=''">  
        		    and <![CDATA[audit_date>=UNIX_TIMESTAMP(#{auditDateBegin})]]>  
      			 </if>  
       			<if test="auditDateEnd!=null and auditDateEnd!=''">  
      		      and <![CDATA[audit_date<=UNIX_TIMESTAMP(#{auditDateEnd}) ]]>  
       			</if>  
       			<if test="releaseAccName!=null and releaseAccName!=''">
   					and release_acc_uuid in(
   					  SELECT tab_person.uuid FROM tab_person WHERE tab_person.person_name LIKE  concat(concat('%',#{releaseAccName}),'%');
			          )
   				</if>
   				<if test="releaseDateBegin!=null and releaseDateBegin!=''">  
        		    and <![CDATA[release_date>=UNIX_TIMESTAMP(#{releaseDateBegin}) ]]>  
      			 </if>  
       			<if test="releaseDateEnd!=null and releaseDateEnd!=''">  
      		      and <![CDATA[release_date<=UNIX_TIMESTAMP(#{releaseDateEnd}) ]]>  
       			</if>  
       			<if test="oneLevelClassify!=null and oneLevelClassify!=''">  
      		      and  one_level_classify =#{oneLevelClassify}
       			</if>  
       			<if test="towLevelClassify!=null and towLevelClassify!=''">  
      		      and  two_level_classify =#{towLevelClassify}
       			</if>  
       			<if test="modelUuid!=null and modelUuid!=''">  
      		      and  uuid =#{modelUuid}
       			</if>  
       			<if test="releaseStatus!=null and releaseStatus!=''">  
      		      and  release_status =#{releaseStatus}
       			</if> 
       			<if test="modelUuids !=null and modelUuids!='' ">  
      		      and  uuid in
      		      <foreach item="item" index="index" collection="modelUuids" open="(" separator="," close=")">  
				   #{item}  
		         </foreach> 
       			</if>  
       			
   			</where>
   			
   	</select>
  	
  	

  	<insert id="insertTabModel">
  		INSERT INTO tab_module (uuid, create_acc_uuid, create_date, modify_acc_uuid, modify_date, audit, audit_acc_uuid, audit_date, release_acc_uuid, release_date, one_level_classify, two_level_classify,release_status) 
  		VALUES (#{modelUuid}, #{createAccUuid}, #{createDate}, #{modifyAccUuid}, #{modifyDate}, #{audit}, #{auditAccUuid},#{auditDate}, #{releaseAccUuid}, #{releaseDate}, #{oneLevelClassify}, #{towLevelClassify},#{releaseStatus})
  	</insert>
  	
  	<update id="updateTabModel" parameterType="priv.guochun.psmc.website.backstage.module.model.TabModule">
  		UPDATE tab_module 
  		<trim prefix="set" suffixOverrides=",">
	  		<if test="modifyAccUuid != null and modifyAccUuid != ''">
	  			modify_acc_uuid =#{modifyAccUuid},
	  		</if>
	  		<if test="modifyDate != null and modifyDate != ''">
	  			modify_date =#{modifyDate},
	  		</if>
	  		<if test="auditAccUuid != null and auditAccUuid != ''">
	  			audit_acc_uuid =#{auditAccUuid},
	  		</if>
	  		<if test="audit != null and audit != ''">
	  			audit =#{audit},
	  		</if>
	  		<if test="auditDate != null and auditDate != ''">
	  			audit_date =#{auditDate},
	  		</if>
	  		<if test="releaseAccUuid != null and releaseAccUuid != ''">
	  			release_acc_uuid =#{releaseAccUuid},
	  		</if>
	  		<if test="releaseDate != null and releaseDate != ''">
	  			release_date =#{releaseDate},
	  		</if>
	  		<if test="oneLevelClassify != null and oneLevelClassify != ''">
	  			one_level_classify =#{oneLevelClassify},
	  		</if>
	  		<if test="towLevelClassify != null and towLevelClassify != ''">
	  			two_level_classify =#{towLevelClassify},
	  		</if>
	  		<if test="releaseStatus != null and releaseStatus != ''">
	  			release_status =#{releaseStatus},
	  		</if>
  		</trim>
  		WHERE uuid = #{modelUuid}
  	</update>
  	
  	
    <delete id="deletesTabModelByUuid" parameterType="hashmap">
    	DELETE FROM  tab_module  where 1=1  and uuid in
    	<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
				  #{item}  
		</foreach>  
    </delete>
</mapper>  