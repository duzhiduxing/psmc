<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="false" default-autowire="byName">


	<bean id="mySpringApplicationContext" class="priv.guochun.psmc.system.framework.util.MySpringApplicationContext" />
	
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc_driverClass}" />
		<property name="url" value="${jdbc_jdbcUrl}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		<!-- 池启动时创建的连接数量 -->
        <property name="initialSize" value="10"/>
        <!-- 同一时间可以从池分配的最多连接数量。设置为0时表示无限制。 -->
        <property name="maxActive" value="30"/>
        <!-- 池里不会被释放的最多空闲连接数量。设置为0时表示无限制。 -->
        <property name="maxIdle" value="20"/>
        <!-- 在不新建连接的条件下，池中保持空闲的最少连接数。 -->
        <property name="minIdle" value="3"/>
	</bean>


	<!-- mybatis config start -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource"></property>  
        <property name="mapperLocations" value="classpath*:priv/**/*.mapper.xml"></property>
<!--         <property name="configurationProperties">   -->
<!-- 	        <props>   -->
<!-- 	            <prop key="jdbcTypeForNull">NULL</prop>   -->
<!-- 	        </props>   -->
<!--     	</property>   -->
		<!--  mybatis分页插件配置-->  
    	<property name="plugins">
		    <array>
		      <bean class="com.github.pagehelper.PageHelper">
		        <property name="properties">
		          <value>dialect=mysql
		          offsetAsPageNum=true
		          rowBoundsWithCount=true
		          reasonable=false
		          supportMethodsArguments=false
		          returnPageInfo=none
		          </value>
		        </property>
		      </bean>
		    </array>
	    </property>
    </bean>  

	 <!--  mybatis自动扫描加载Sql映射文件 与接口。-->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="priv.guochun.psmc.*"></property>   
    </bean>  
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">  
    <constructor-arg index="0" ref="sessionFactory" />  
    </bean>  
	<!-- mybatis config end -->

 
    <bean id="iDaoTemplate" class="priv.guochun.psmc.system.framework.dao.IDaoTemplateImpl" scope="prototype">  
    </bean>


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"/>

	<!-- 定义事务规则 -->
	<bean id="transactionProxy"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="submit*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="batch*">PROPAGATION_REQUIRED</prop>
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="search*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*Advice">PROPAGATION_REQUIRED,readOnly</prop>
				
			</props>
		</property>
	</bean>

	<!-- 所有Service结尾的Bean需要自动创建事务代理 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
			
		<property name="interceptorNames">
			<list>
				<value>transactionProxy</value>
			</list>
		</property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"/>


	<!-- 线程执行器配置，用于任务注册 -->
	<bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	 <property name="corePoolSize" value="3" />
	 <property name ="keepAliveSeconds" value ="300" /> 
	 <property name="maxPoolSize" value="8" />
	 <property name="queueCapacity" value="16" />
	</bean>
	
	
	
</beans>
